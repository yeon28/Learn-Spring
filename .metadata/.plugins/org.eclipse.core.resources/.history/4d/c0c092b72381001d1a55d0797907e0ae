<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

   <context:component-scan base-package="com.spring.biz" />
   
  
   
   <!-- pointcut : 실제로 AOP를 적용할 package 또는 class 또는 method -->
   
<!-- 
   <bean id="log" class="com.spring.biz.common.LogAdvice" />
   <aop:config>
      <aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointcut"/>   
      <aop:aspect ref="log">
         <aop:before method="printLog" pointcut-ref="allPointcut"/>
      </aop:aspect>
   </aop:config>
-->

<!-- AFTER RETURNING

	<bean id="afterReturning" class="com.spring.biz.common.AfterReturningAdvice"/>
   <aop:config>
      <aop:pointcut expression="execution(* com.spring.biz..*Impl.get*(..))" id="getPointcut"/>   
      <aop:aspect ref="afterReturning">
         <aop:after-returning method="afterLog" pointcut-ref="getPointcut"/>
      </aop:aspect>
   </aop:config>


<bean id="afterReturning" class="com.spring.biz.common.AfterReturningAdvice"/>
   <aop:config>
      <aop:pointcut expression="execution(* com.spring.biz..*Impl.get*(..))" id="getPointcut"/>   
      <aop:aspect ref="afterReturning">
         <aop:after-returning method="afterLog2" pointcut-ref="getPointcut" returning="returnObj"/>
      </aop:aspect>
   </aop:config>
-->

<!--
   <bean id="afterThrowing" class="com.spring.biz.common.AfterThrowingAdvice"/>
   <aop:config>
      <aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointcut"/>   
      <aop:aspect ref="afterThrowing">
      <aop:after-throwing method="exceptionLog" pointcut-ref="allPointcut"/>
   </aop:aspect>
   </aop:config>
	<bean id="afterThrowing" class="com.spring.biz.common.AfterThrowingAdvice"/>
   <aop:config>
      <aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointcut"/>   
      <aop:aspect ref="afterThrowing">
      <aop:after-throwing method="exceptionLog2" pointcut-ref="allPointcut" throwing="execeptObj"/>
   </aop:aspect>
   </aop:config>
-->

<!--
   <bean id="after" class="com.spring.biz.common.AfterAdvice"/>
   <aop:config>
      <aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointcut"/>   
      <aop:aspect ref="after">
      <aop:after method="finallyLog" pointcut-ref="allPointcut"/>
   </aop:aspect>
   </aop:config>
    -->
    
    <!-- 
   <bean id="around" class="com.spring.biz.common.AroundAdvice"/>
   <aop:config>
      <aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointcut"/>   
      <aop:aspect ref="around">
      <aop:around method="aroundLog" pointcut-ref="allPointcut"/>
   </aop:aspect>
   </aop:config>
-->

<!--
    <bean id="log" class="com.spring.biz.common.LogAdvice" />
   <aop:config>
      <aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointcut"/>   
      <aop:aspect ref="log">
         <aop:before method="printLog2" pointcut-ref="allPointcut"/>
      </aop:aspect>
   </aop:config>
 -->



</beans>